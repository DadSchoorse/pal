{
  "DriverState": [
    "HaltedOnDeviceInit"
  ],
  "Hwl": "Gfx9",
  "Settings": [
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableLoadIndexForObjectBinds",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Toggles whether or not LOAD_INDEX packets are used for binding objects to the command buffer in place of set packets.",
      "Tags": [
        "General"
      ],
      "VariableName": "enableLoadIndexForObjectBinds",
      "HashName": 2416072074
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableBorderColorPaletteBinds",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Disables binding of border color palettes, and forces any samplers created to use a transparent black color. ",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "disableBorderColorPaletteBinds",
      "HashName": 3825276041
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DrainPsOnOverlap",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Related to primitive ordered pixel shading.  If set, forces the PS to drain on anydetected overlapping wave",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "drainPsOnOverlap",
      "HashName": 2630919068
    },
    {
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "PrintMetaEquationInfo",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "uint32",
      "Description": "Controls printing of meta-equation data.  Debug builds only.",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "printMetaEquationInfo",
      "ValidValues": {
        "Name": "Gfx9PrintMetaEquationInfo",
        "Values": [
          {
            "Name": "Gfx9PrintMetaEquationInfoEquations",
            "Value": 1,
            "Description": "Prints meta equations themselves."
          },
          {
            "Name": "Gfx9PrintMetaEquationInfoProcessing",
            "Value": 2,
            "Description": "Prints equation coordinates as they're processed."
          }
        ],
        "IsEnum": true
      },
      "HashName": 2137175839
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "ProcessMetaEquationViaCpu",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, the meta-equations will be processed by the cpu instead of by a compute shader.Emulation, debug builds only.  Useful for pre-silicon development",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "processMetaEquationViaCpu",
      "HashName": 3623936311
    },
    {
      "Defaults": {
        "Default": 7
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "OptimizedFastClear",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "uint32",
      "Description": "If enabled, the meta-equations will be processed by an optimized compute shader and algorithm.",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "optimizedFastClear",
      "ValidValues": {
        "Name": "Gfx9OptimizedFastClear",
        "Values": [
          {
            "Name": "Gfx9OptimizedFastClearDisabled",
            "Value": 0,
            "Description": "Disable the Optimized Fast Clear Path."
          },
          {
            "Name": "Gfx9OptimizedFastClearColorCmask",
            "Value": 1,
            "Description": "Enable Optimized Fast Clear Path for color surfaces cmask metadata fastclear(msaa only)."
          },
          {
            "Name": "Gfx9OptimizedFastClearColorDcc",
            "Value": 2,
            "Description": "Enable Optimized Fast Clear Path for color surfaces dcc metadata fastclear."
          },
          {
            "Name": "Gfx9OptimizedFastClearDepth",
            "Value": 4,
            "Description": "Enable Optimized Fast Clear Path for depth surfaces htile metadata fastclear."
          }
        ],
        "IsEnum": true
      },
      "HashName": 1875719625
    },
    {
      "Defaults": {
        "Default": 0
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "AlwaysDecompress",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "uint32",
      "Description": "Controls whether the specified decompress / expand / eliminate operations will always occur when requested.",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "alwaysDecompress",
      "ValidValues": {
        "Name": "DecompressMask",
        "Values": [
          {
            "Name": "DecompressDcc",
            "Value": 1,
            "Description": "DCC decompress."
          },
          {
            "Name": "DecompressHtile",
            "Value": 2,
            "Description": "Depth expand."
          },
          {
            "Name": "DecompressFmask",
            "Value": 4,
            "Description": "FMask decompress."
          },
          {
            "Name": "DecompressFastClear",
            "Value": 8,
            "Description": "Fast clear eliminate."
          }
        ]
      },
      "HashName": 2887583419
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "Treat1dAs2d",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "True to override 1D images to be 2D instead.",
      "Tags": [
        "General"
      ],
      "VariableName": "treat1dAs2d",
      "HashName": 648332656
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "ForceRegularClearCode",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Forces a fast clear code to be the regular clear code and turns off AC01 compression which makes sure the four 'magic' compressed clear codes aren't used.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "forceRegularClearCode",
      "HashName": 2537383476
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "ForceGraphicsFillMemoryPath",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Forces use of a graphics fill memory path on command buffers that supports graphics ops",
      "Tags": [
        "General",
        "Gfx9"
      ],
      "VariableName": "forceGraphicsFillMemoryPath",
      "HashName": 451570688
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaitOnMetadataMipTail",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Controls whether to wait after F/I when changing targets within a Metadata mip tail region. This can resolve corruptions related to metadata cache conflicts.",
      "Tags": [
        "Cache flush",
        "Gfx9"
      ],
      "VariableName": "waitOnMetadataMipTail",
      "HashName": 2328100940
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BlendOptimizationEnable",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, writes the COLOR_SRC_OPT and COLOR_DST_OPT bits of theSX_MRT#_BLEND_OPT for Blend States.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "blendOptimizationsEnable",
      "HashName": 3560979294
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "FastColorClearEnable",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, DCC will be used to support fast color clears on singlesampled Color Target Images.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "fastColorClearEnable",
      "HashName": 1938040824
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "FastColorClearOn3DEnable",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, DCC will be used to support fast color clears on singlesampled 3D Color Target Images.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "fastColorClearOn3dEnable",
      "HashName": 655987862
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "FmaskCompressDisable",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Controls the setting of the CB_COLOR_INFO.FMASK_COMPRESSION_DISABLE bit.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "fmaskCompressDisable",
      "HashName": 2717822859
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "FmaskAllowPipeBankXor",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, allows for non-zero fMask pipe-bank-xor.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "fmaskAllowPipeBankXor",
      "HashName": 4218731941
    },
    {
      "Defaults": {
        "Default": 3
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "DccOnComputeEnable",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "uint32",
      "Description": "Determines the situations on which a compute shader will be used for DCC access.",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "dccOnComputeEnable",
      "ValidValues": {
        "Name": "Gfx9DccOnCompute",
        "Values": [
          {
            "Name": "Gfx9DccOnComputeInit",
            "Value": 1,
            "Description": "One time init"
          },
          {
            "Name": "Gfx9DccOnComputeFastClear",
            "Value": 2,
            "Description": "Fast color clear."
          }
        ],
        "IsEnum": true
      },
      "HashName": 950561670
    },
    {
      "Defaults": {
        "Default": 1023
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "UseDcc",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "uint32",
      "Description": "Bitmask of cases where DCC (delta color compression) surfaces will be used",
      "Tags": [
        "Color Targets",
        "Gfx9"
      ],
      "VariableName": "useDcc",
      "ValidValues": {
        "Name": "Gfx9UseDcc",
        "Values": [
          {
            "Name": "Gfx9UseDccSingleSample",
            "Value": 1,
            "Description": "Single sample render targets"
          },
          {
            "Name": "Gfx9UseDccSrgb",
            "Value": 2,
            "Description": "SRGB numeric format images"
          },
          {
            "Name": "Gfx9UseDccNonTcCompatShaderRead",
            "Value": 4,
            "Description": "Non-TC compatible shader read"
          },
          {
            "Name": "Gfx9UseDccPrt",
            "Value": 8,
            "Description": "Partially resident textures"
          },
          {
            "Name": "Gfx9UseDccMultiSample2x",
            "Value": 16,
            "Description": "2x multisample render targets"
          },
          {
            "Name": "Gfx9UseDccMultiSample4x",
            "Value": 32,
            "Description": "4x multisample render targets"
          },
          {
            "Name": "Gfx9UseDccMultiSample8x",
            "Value": 64,
            "Description": "8x multisample render targets"
          },
          {
            "Name": "Gfx9UseDccEqaa",
            "Value": 128,
            "Description": "EQAA render targets"
          },
          {
            "Name": "Gfx9UseDccForNonReadableFormats",
            "Value": 256,
            "Description": "Non-readable but still renderable or shader-writeable formats"
          }
        ],
        "IsEnum": true
      },
      "HashName": 4029518654
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "CsMaxWavesPerCu",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the WAVES_PER_SH field in the COMPUTE_RESOURCE_LIMITS register; note that it is specified per-CU rather than per-SH for convenience.",
      "Tags": [
        "Compute Pipelines",
        "Gfx9"
      ],
      "VariableName": "csMaxWavesPerCu",
      "ValidValues": {
        "Values": [
          {
            "Value": 0,
            "Description": "Do not limit number of waves in flight in each compute unit."
          },
          {
            "LogicOp": "LessThanOrEqual",
            "Value": 40,
            "Description": "Limits the number of waves in flight in each compute unit."
          }
        ]
      },
      "HashName": 4216700794
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "CsLockThreshold",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the LOCK_THRESHOLD field in the COMPUTE_RESOURCE_LIMITS register. CS per-SH low threshold for locking.",
      "Tags": [
        "Compute Pipelines",
        "Gfx9"
      ],
      "VariableName": "csLockThreshold",
      "ValidValues": {
        "Values": [
          {
            "Value": 0,
            "Description": "Disables locking."
          },
          {
            "LogicOp": "MultipleOf",
            "Value": 4,
            "Description": "CS per-SH low threshold for locking."
          }
        ]
      },
      "HashName": 346110079
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "CsSimdDestCntl",
      "Defaults": {
        "Default": "CsSimdDestCntlDefault"
      },
      "Type": "enum",
      "Description": "Controls the SIMD_DEST_CNTL field of the COMPUTE_RESOURCE_LIMITS register. By default, this flag is calulated based on the number of waves in the dispatch. If the number of waves is a multiple of 4, this flag is set, otherwise it is cleared.",
      "Tags": [
        "Compute Pipelines",
        "Gfx9"
      ],
      "VariableName": "csSimdDestCntl",
      "ValidValues": {
        "Name": "CsSimdDestCntlMode",
        "Values": [
          {
            "Name": "CsSimdDestCntlDefault",
            "Value": 0,
            "Description": "Keeps the default SIMD_DEST_CNTL behavior."
          },
          {
            "Name": "CsSimdDestCntlForce1",
            "Value": 1,
            "Description": "Forces SIMD_DEST_CNTL to 1."
          },
          {
            "Name": "CsSimdDestCntlForce0",
            "Value": 2,
            "Description": "Forces SIMD_DEST_CNTL to 0."
          }
        ]
      },
      "HashName": 3574730191
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "HtileEnable",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, HTile will be enabled for depth/stencil images.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "htileEnable",
      "HashName": 2379988876
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DepthCompressEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, depth compression will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "depthCompressEnable",
      "HashName": 3404166969
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "StencilCompressEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, stencil compression will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "stencilCompressEnable",
      "HashName": 3041432192
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DbPreloadEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, DB preloading will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "dbPreloadEnable",
      "HashName": 2946289999
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DbPreloadWinEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, DB preload window dimensions will be used instead of the depth buffer's dimensions.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "dbPreloadWinEnable",
      "HashName": 4030437501
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DbPerTileExpClearEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, per-tile tracking of exp/clear will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "dbPerTileExpClearEnable",
      "HashName": 399713165
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "HiDepthEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, hierarchical depth testing will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "hiDepthEnable",
      "HashName": 950148604
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "HiStencilEnable",
      "DependsOn": {
        "Settings": [
          {
            "Name": "Gfx9HtileEnable",
            "Values": [
              true
            ]
          }
        ]
      },
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, hierarchical stencil testing will be enabled.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "hiStencilEnable",
      "HashName": 37862373
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "DbRequestSize",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Specifies the DB read request size.",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "dbRequestSize",
      "ValidValues": {
        "Values": [
          {
            "Value": 0,
            "Description": "256-bit request size."
          },
          {
            "Value": 1,
            "Description": "512-bit request size."
          }
        ]
      },
      "HashName": 2835145461
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DbDisableColorOnValidation",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Controls the DB_RENDER_OVERRIDE2.DISABLE_COLOR_ON_VALIDATION register field",
      "Tags": [
        "Depth/Stencil",
        "Gfx9"
      ],
      "VariableName": "dbDisableColorOnValidation",
      "HashName": 4057416918
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableOnchipGs",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, onchip GS will be used if possible.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "enableOnchipGs",
      "HashName": 4034461831
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableOutOfOrderPrimitives",
      "Defaults": {
        "Default": "OutOfOrderPrimSafe"
      },
      "Type": "enum",
      "Description": "Enable out-of-order primitive mode. Only available on parts that have more than one VGT.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "enableOutOfOrderPrimitives",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "OutOfOrderPrimMode",
        "Values": [
          {
            "Name": "OutOfOrderPrimDisable",
            "Value": 0,
            "Description": "Always disable."
          },
          {
            "Name": "OutOfOrderPrimSafe",
            "Value": 1,
            "Description": "Enable when known to not affect render output."
          },
          {
            "Name": "OutOfOrderPrimAggressive",
            "Value": 2,
            "Description": "Enable when suspected to not affect render output."
          },
          {
            "Name": "OutOfOrderPrimAlways",
            "Value": 3,
            "Description": "Always enable."
          }
        ]
      },
      "HashName": 4194624623
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "OutOfOrderWatermark",
      "Defaults": {
        "Default": 7
      },
      "Type": "uint32",
      "Description": "The watermark value for out-of-order primitives.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "outOfOrderWatermark",
      "ValidValues": {
        "Values": [
          {
            "LogicOp": "LessThanOrEqual",
            "Value": 7,
            "Description": "Values are log(2) of the watermark."
          }
        ]
      },
      "HashName": 2921949520
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "GsCuGroupEnabled",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, the HW-GS stage will prefer to send a wave to each SIMD in a CU before moving to the next enabled CU. If false, HW-GS prefers to send only one wave to each CU before moving to the next enabled CU.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "gsCuGroupEnabled",
      "HashName": 2295262967
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "GsMaxLdsSize",
      "Defaults": {
        "Default": 8192
      },
      "Type": "uint32",
      "Description": "Maximum amount of LDS space to alloc for each on-chip GS subgroup, in DWORDs.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "gsMaxLdsSize",
      "ValidValues": {
        "Values": [
          {
            "LogicOp": "MultipleOf",
            "Value": 128,
            "Description": "Must be 128 dword aligned."
          }
        ]
      },
      "HashName": 3033759533
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "GsOffChipThreshold",
      "Defaults": {
        "Default": 64
      },
      "Type": "uint32",
      "Description": "If the number of GS prims per subgroup * GS instance count is less than this threshold use off-chip GS. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "gsOffChipThreshold",
      "HashName": 1659075697
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "GsPrimsPerSubGroup",
      "Defaults": {
        "Default": 64
      },
      "Type": "uint32",
      "Description": "Target number of GS prims per subgroup when running with on-chip GS. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "idealGsPrimsPerSubGroup",
      "HashName": 307437762
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "LateAllocGs",
      "Defaults": {
        "Default": 16
      },
      "Type": "uint32",
      "Description": "Controls the value for late-alloc GS.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "lateAllocGs",
      "ValidValues": {
        "Values": [
          {
            "LogicOp": "LessThanOrEqual",
            "Value": 127
          }
        ]
      },
      "HashName": 1802508004
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "LateAllocVs",
      "Defaults": {
        "Default": "LateAllocVsBehaviorLegacy"
      },
      "Type": "enum",
      "Description": "Controls the behavior for late-alloc VS.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "lateAllocVs",
      "ValidValues": {
        "Name": "LateAllocVsBehavior",
        "Values": [
          {
            "Name": "LateAllocVsBehaviorLegacy",
            "Value": 0,
            "Description": "Enable late-alloc vs, but incorrectly masks off CUs in dynamic mode"
          },
          {
            "Name": "LateAllocVsBehaviorDynamicEnableAllCus",
            "Value": 1,
            "Description": "Enable late-alloc vs, but don't mask off CUs"
          },
          {
            "Name": "LateAllocVsBehaviorDisabled",
            "Value": 2,
            "Description": "Disable late-alloc vs entirely"
          }
        ],
        "IsEnum": true
      },
      "HashName": 1805023933
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "MaxTessFactor",
      "Defaults": {
        "Default": 64.0
      },
      "Type": "float",
      "Description": "Clamps the maximum tessellation factor.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "maxTessFactor",
      "HashName": 3272504111
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NumOffchipLdsBuffers",
      "Defaults": {
        "Default": 508
      },
      "Type": "uint32",
      "Description": "Controls the number of LDS buffers used for offchip tessellation: Gfx9: 1->508: Number of offchip tessellation buffers.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "numOffchipLdsBuffers",
      "ValidValues": {
        "Values": [
          {
            "LogicOp": "LessThanOrEqual",
            "Value": 508,
            "Description": "Number of offchip tessellation buffers."
          }
        ]
      },
      "HashName": 4150915470
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NumTessPatchesPerThreadGroup",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the number of patches-per-thread-group to run when tessellationis enabled. This value is normally limited by hardware resources (LDS,TFBuffer, Threads). - Setting to 1 will always work, but is slowest. - Setting to 0 will allow the driver to choose the optimal value. - Any other value will be used (clamped based on HW resources). Offchip Tess rounds this to the nearest multiple of four.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "numTessPatchesPerTg",
      "HashName": 2699532302
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "OffchipLdsBufferSize",
      "Defaults": {
        "Default": "OffchipLdsBufferSize8192"
      },
      "Type": "enum",
      "Description": "Controls the size of each offchip LDS Buffer.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "offchipLdsBufferSize",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "OffchipLdsBufferSize",
        "Values": [
          {
            "Name": "OffchipLdsBufferSize8192",
            "Value": 0,
            "Description": "8k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize4096",
            "Value": 1,
            "Description": "4k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize2048",
            "Value": 2,
            "Description": "2k DWORDs."
          },
          {
            "Name": "OffchipLdsBufferSize1024",
            "Value": 3,
            "Description": "1k DWORDs."
          }
        ]
      },
      "HashName": 4262839798
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "IsolineDistributionFactor",
      "Defaults": {
        "Default": 40
      },
      "Type": "uint32",
      "Description": "Used by the hardware when distributed tessellation is active: the min tess factors for each patch processed by a VGT are accumulated. When the sum exceeds this threshold, the next patch is sent to a different VGT.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "isolineDistributionFactor",
      "HashName": 951961633
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "TriDistributionFactor",
      "Defaults": {
        "Default": 30
      },
      "Type": "uint32",
      "Description": "Used by the hardware when distributed tessellation is active: the min tess factors for each patch processed by a VGT are accumulated. When the sum exceeds this threshold, the next patch is sent to a different VGT. Recommended to be higher than quad factor",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "triDistributionFactor",
      "HashName": 2867566175
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "QuadDistributionFactor",
      "Defaults": {
        "Default": 24
      },
      "Type": "uint32",
      "Description": "Used by the hardware when distributed tessellation is active: the min tess factors for each patch processed by a VGT are accumulated. When the sum exceeds this threshold, the next patch is sent to a different VGT.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "quadDistributionFactor",
      "HashName": 860015919
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DonutDistributionFactor",
      "Defaults": {
        "Default": 24
      },
      "Type": "uint32",
      "Description": "Used by the hardware when distributed tessellation is in DONUT mode: the min tess factor for each patch is tested against this threshold to determine whether a patch gets split up. If the patch isn't split, it still increments the accumulator for the Patch distribution factor.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "donutDistributionFactor",
      "HashName": 891881186
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "TrapezoidDistributionFactor",
      "Defaults": {
        "Default": 6
      },
      "Type": "uint32",
      "Description": "Used when the distribution mode is TRAPEZOID for quad and tri domain types. The number of donuts in the patch are compared against this value to detemine whether this donut gets split up into trapezoids (needs the patch to be in donut mode). A value of 0 or 1 will be treated as 2. The innermost donut is never allowed to be broken into trapezoids.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "trapezoidDistributionFactor",
      "HashName": 674984646
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "PrimgroupSize",
      "Defaults": {
        "Default": 128
      },
      "Type": "uint32",
      "Description": "Number of primitives sent to one VGT before switching to the next. Valid range is 1-65536, values larger than 256 are expected to hurtperformance. This setting only affects non-tessellation and non-NGG pipelines.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "primGroupSize",
      "HashName": 3402504325
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "PsCuGroupEnabled",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, the HW-PS stage will prefer to send a wave to each SIMD in a CU before moving to the next enabled CU. If false, HW-PS prefers to send only one wave to each CU before moving to the next enabled CU.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "psCuGroupEnabled",
      "HashName": 1924559864
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "RbPlusEnable",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, RbPlus will be enabled for ASIC of RbPlus capability.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "gfx9RbPlusEnable",
      "HashName": 2122164302
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "SwitchVgtOnDraw",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, the HW will alternate VGT's between draws rather than between sets of primitives within a draw. True is safer, but less performant.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "switchVgtOnDraw",
      "HashName": 1102013901
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "TessFactorBufferSizePerSe",
      "Defaults": {
        "Default": 8192
      },
      "Type": "uint32",
      "Description": "Controls the size of the tess-factor buffer. This size is per-SE, andmeasured in DWORDs.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "tessFactorBufferSizePerSe",
      "HashName": 3112016659
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "TessWalkPattern",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Vertex walking pattern for tessellation: 0: (default) Donut walking pattern for optimal reuse. 1: Single-ring walking pattern, has suboptimal reuse.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "disableTessDonutWalkPattern",
      "HashName": 2972449453
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "UseMaxOffchipLdsBuffers",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, offchip tessellation will always use the maximum number ofLDS buffers possible (based on Chip ID).",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "useMaxOffchipLdsBuffers",
      "HashName": 3365086421
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "VsCuGroupEnabled",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, the HW-VS stage will prefer to send a wave to each SIMD in a CU before moving to the next enabled CU. If false, HW-VS prefers to send only one wave to each CU before moving to the next enabled CU.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "vsCuGroupEnabled",
      "HashName": 1712293842
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "VsHalfPackThreshold",
      "Defaults": {
        "Default": 16
      },
      "Type": "uint32",
      "Description": "Load half-packed VS waves, forcing them to use half as much space in the param cache at the expense of inefficient use of ALU resources, if the export count is >= this threshold. This can help performance in some cases.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "vsHalfPackThreshold",
      "HashName": 987247393
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "VsForcePartialWave",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, forces the VGT to issue a VS wave as soon as a primgroup isfinished.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "vsForcePartialWave",
      "HashName": 1946161867
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableCoverageAaMask",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Current recommendation from the hardware team is to force PA_SC_CONSERVATIVE_RAST_CNTL.COVERAGE_AA_MASK = 0",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "disableCoverageAaMask",
      "HashName": 1829991091
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "WdLoadBalancingMode",
      "Defaults": {
        "Default": "Gfx9WdLoadBalancingAdvanced"
      },
      "Type": "enum",
      "Description": "Setting for controlling work distributor load balancing.",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "wdLoadBalancingMode",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "Gfx9WdLoadBalancingMode",
        "Values": [
          {
            "Name": "Gfx9WdLoadBalancingDisabled",
            "Value": 0,
            "Description": "Disabled. Software load balancing."
          },
          {
            "Name": "Gfx9WdLoadBalancingBasic",
            "Value": 1,
            "Description": "Basic. Enables small instance optimization."
          },
          {
            "Name": "Gfx9WdLoadBalancingAdvanced",
            "Value": 2,
            "Description": "Advanced. Enabled basic mode plus small instance unrolling draws optimization."
          }
        ],
        "IsEnum": true
      },
      "HashName": 2657864074
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BatchBreakOnNewPixelShader",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "True forces a BATCH_BREAK event when a new pixel shader is bound. False by default.",
      "Tags": [
        "Graphics Pipelines"
      ],
      "VariableName": "batchBreakOnNewPixelShader",
      "HashName": 3367458304
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "GsCuEnLimitMask",
      "Defaults": {
        "Default": 4294967295
      },
      "Type": "uint32",
      "Description": "This mask is AND-ed with the driver-decided GS-specific CU_EN mask to further allow limiting of enabled CUs for GS waves. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "gsCuEnLimitMask",
      "HashName": 3021103171
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "VsCuEnLimitMask",
      "Defaults": {
        "Default": 4294967295
      },
      "Type": "uint32",
      "Description": "This mask is AND-ed with the driver-decided VS-specific CU_EN mask to further allow limiting of enabled CUs for VS waves. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "vsCuEnLimitMask",
      "HashName": 989310036
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "PsCuEnLimitMask",
      "Defaults": {
        "Default": 4294967295
      },
      "Type": "uint32",
      "Description": "This mask is AND-ed with the driver-decided PS-specific CU_EN mask to further allow limiting of enabled CUs for PS waves. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "psCuEnLimitMask",
      "HashName": 1509811598
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "CsCuEnLimitMask",
      "Defaults": {
        "Default": 4294967295
      },
      "Type": "uint32",
      "Description": "This mask is AND-ed with the driver-decided CS-specific CU_EN mask to further allow limiting of enabled CUs for CS waves. ",
      "Tags": [
        "Graphics Pipelines",
        "Gfx9"
      ],
      "VariableName": "csCuEnLimitMask",
      "HashName": 3382331351
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "OffChipHsCopyMethod",
      "Defaults": {
        "Default": "Gfx9OffChipHsCopyAllAtEnd"
      },
      "Type": "enum",
      "Description": "Specifies to SC how to copy HS outputs to off-chip memory.",
      "Tags": [
        "Shader Options",
        "Gfx9"
      ],
      "VariableName": "gfx9OffChipHsCopyMethod",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "Gfx9OffChipHsCopyMethod",
        "Values": [
          {
            "Name": "Gfx9OffChipHsImmediate",
            "Value": 0,
            "Description": "Copy HS outputs directly to off-chip memory."
          },
          {
            "Name": "Gfx9OffChipHsCopyAllAtEnd",
            "Value": 1,
            "Description": "Write HS outputs to LDS, then at end of HS use multi-threaded loop to copy from LDS to off-chip memory."
          },
          {
            "Name": "Gfx9OffChipHsCopyMultiElements",
            "Value": 2,
            "Description": "Writes output control points and patch constants directly to off-chip and only copy theinput control point to memory at the end."
          }
        ],
        "IsEnum": true
      },
      "HashName": 1882491753
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "OffChipHsSkipDataCopyNullPatch",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Enables SC optimization to skip copying data from HS for null patches ",
      "Tags": [
        "Shader Options",
        "Gfx9"
      ],
      "VariableName": "gfx9OffChipHsSkipDataCopyNullPatch",
      "HashName": 1952167388
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "OptimizeDsDataFetch",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Enables SC optimization for optimized DS data fetch. ",
      "Tags": [
        "Shader Options",
        "Gfx9"
      ],
      "VariableName": "gfx9OptimizeDsDataFetch",
      "HashName": 2405308569
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggEnableMode",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "enum",
      "Description": "Setting for the enablement of NGG on a per-pipeline type basis. For quality purposes only.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "HashName": 1973955291,
      "ValidValues": {
        "Name": "Gfx9NggPipelineType",
        "Values": [
          {
            "Name": "NggPipelineTypeDisabled",
            "Value": 0,
            "Description": "Disabled."
          },
          {
            "Name": "NggPipelineTypeVsPs",
            "Value": 1,
            "Description": "Enabled for all VsPs (VsPs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsGsPs",
            "Value": 2,
            "Description": "Enabled for all VsGsPs (Gs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsPs",
            "Value": 4,
            "Description": "Enabled for all VsHsDsPs (Tess) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsGsPs",
            "Value": 8,
            "Description": "Enabled for all VsHsDsGsPs (GsTess) pipelines."
          },
          {
            "Name": "NggPipelineTypeAll",
            "Value": 15,
            "Description": "Enabled for all pipeline types."
          }
        ]
      },
      "VariableName": "nggEnableMode",
      "Defaults": {
        "Default": "NggPipelineTypeAll"
      }
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggSubgroupSize",
      "Defaults": {
        "Default": "NggSubgroupOptimizeForPrims"
      },
      "Type": "enum",
      "Description": "Controls the default NGG subgroup size handling. Only useful if client calls Pal::IDevice::ScpcGraphicsPipelineTuningOptions().",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggSubgroupSize",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "NggSubgroupSize",
        "Values": [
          {
            "Name": "NggSubgroupMaximumSize",
            "Value": 0
          },
          {
            "Name": "NggSubgroupHalfSize",
            "Value": 1
          },
          {
            "Name": "NggSubgroupOptimizeForVerts",
            "Value": 2
          },
          {
            "Name": "NggSubgroupOptimizeForPrims",
            "Value": 3
          },
          {
            "Name": "NggSubgroupExplicit",
            "Value": 4
          }
        ],
        "IsEnum": true
      },
      "HashName": 2078497267
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggPrimsPerSubgroup",
      "Defaults": {
        "Default": 256
      },
      "Type": "uint32",
      "Description": "Controls the value for primitives per subgroup for NGG pipelines. Only used if NggSubgroupSize is set to Explicit.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggPrimsPerSubgroup",
      "HashName": 958458130
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggVertsPerSubgroup",
      "Defaults": {
        "Default": 256
      },
      "Type": "uint32",
      "Description": "Controls the value for vertices per subgroup for NGG pipelines. Only used if NggSubgroupSize is set to Explicit.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggVertsPerSubgroup",
      "HashName": 2005944793
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggLateAllocGs",
      "Defaults": {
        "Default": 127
      },
      "Type": "uint32",
      "Description": "Controls the value for late-alloc GS for NGG pipelines. Can be no more than 127.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggLateAllocGs",
      "HashName": 3217915194
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableBackfaceCullMask",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "enum",
      "Description": "Setting for the enablement of backface culling on a per-pipeline type basis. For quality purposes only.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "HashName": 1669167072,
      "ValidValues": {
        "Name": "Gfx9NggPipelineType",
        "Values": [
          {
            "Name": "NggPipelineTypeDisabled",
            "Value": 0,
            "Description": "Disabled."
          },
          {
            "Name": "NggPipelineTypeVsPs",
            "Value": 1,
            "Description": "Enabled for all VsPs (VsPs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsGsPs",
            "Value": 2,
            "Description": "Enabled for all VsGsPs (Gs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsPs",
            "Value": 4,
            "Description": "Enabled for all VsHsDsPs (Tess) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsGsPs",
            "Value": 8,
            "Description": "Enabled for all VsHsDsGsPs (GsTess) pipelines."
          },
          {
            "Name": "NggPipelineTypeAll",
            "Value": 15,
            "Description": "Enabled for all pipeline types."
          }
        ]
      },
      "VariableName": "enableBackfaceCullMask",
      "Defaults": {
        "Default": "NggPipelineTypeDisabled"
      }
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableAccurateFrustumCullMask",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "enum",
      "Description": "Setting for the enablement of accurate frustum culling on a per-pipeline type basis. For quality purposes only.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "HashName": 1388275830,
      "ValidValues": {
        "Name": "Gfx9NggPipelineType",
        "Values": [
          {
            "Name": "NggPipelineTypeDisabled",
            "Value": 0,
            "Description": "Disabled."
          },
          {
            "Name": "NggPipelineTypeVsPs",
            "Value": 1,
            "Description": "Enabled for all VsPs (VsPs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsGsPs",
            "Value": 2,
            "Description": "Enabled for all VsGsPs (Gs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsPs",
            "Value": 4,
            "Description": "Enabled for all VsHsDsPs (Tess) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsGsPs",
            "Value": 8,
            "Description": "Enabled for all VsHsDsGsPs (GsTess) pipelines."
          },
          {
            "Name": "NggPipelineTypeAll",
            "Value": 15,
            "Description": "Enabled for all pipeline types."
          }
        ]
      },
      "VariableName": "enableAccurateFrustumCullMask",
      "Defaults": {
        "Default": "NggPipelineTypeDisabled"
      }
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableSmallPrimFilterMask",
      "Flags": {
        "IsBitmask": true,
        "IsHex": true
      },
      "Type": "enum",
      "Description": "Setting for the enablement of small primitive filter culling on a per-pipeline type basis. For quality purposes only.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "HashName": 2981395067,
      "ValidValues": {
        "Name": "Gfx9NggPipelineType",
        "Values": [
          {
            "Name": "NggPipelineTypeDisabled",
            "Value": 0,
            "Description": "Disabled."
          },
          {
            "Name": "NggPipelineTypeVsPs",
            "Value": 1,
            "Description": "Enabled for all VsPs (VsPs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsGsPs",
            "Value": 2,
            "Description": "Enabled for all VsGsPs (Gs) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsPs",
            "Value": 4,
            "Description": "Enabled for all VsHsDsPs (Tess) pipelines."
          },
          {
            "Name": "NggPipelineTypeVsHsDsGsPs",
            "Value": 8,
            "Description": "Enabled for all VsHsDsGsPs (GsTess) pipelines."
          },
          {
            "Name": "NggPipelineTypeAll",
            "Value": 15,
            "Description": "Enabled for all pipeline types."
          }
        ]
      },
      "VariableName": "enableSmallPrimFilterMask",
      "Defaults": {
        "Default": "NggPipelineTypeDisabled"
      }
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggEnableFasterLaunchRate",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, enables faster launch rate for all NGG pipelines. For quality testing purposes only.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggEnableFasterLaunchRate",
      "HashName": 2148773048
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "EnableOrderedIdMode",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, enables VGT_SHADER_STAGES_EN::ORDERED_ID_MODE. Only applies to NGG piplines.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "enableOrderedIdMode",
      "HashName": 2883144017
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "NggRingSize",
      "Defaults": {
        "Default": 32
      },
      "Type": "uint32",
      "Description": "Controls how many instances of the NGG shader-data tables will be contained in the ring buffer managed by Universal Command Buffers. At most, the constant engine will be able to get that many draws ahead of the draw engine. This must be either zero, or divisible by four. If zero, any pipeline which requires NGG will fail to compile because no SRD table is present.",
      "Tags": [
        "NGG Controls",
        "Gfx9"
      ],
      "VariableName": "nggRingSize",
      "HashName": 3858230864
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DeferredBatchBinMode",
      "Defaults": {
        "Default": "Gfx9DeferredBatchBinAccurate"
      },
      "Type": "enum",
      "Description": "Controls whether or not deferred batch binning is enabled 0 : Batch binning always disabled 1 : Use custom bin sizes 2 : Optimal ",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningMode",
      "ValidValues": {
        "IsExclusive": true,
        "Name": "Gfx9BinningMode",
        "Values": [
          {
            "Name": "Gfx9DeferredBatchBinDisabled",
            "Value": 0
          },
          {
            "Name": "Gfx9DeferredBatchBinCustom",
            "Value": 1
          },
          {
            "Name": "Gfx9DeferredBatchBinAccurate",
            "Value": 2
          }
        ],
        "IsEnum": true
      },
      "HashName": 4130214844
    },
    {
      "Flags": {
        "IsHex": true
      },
      "Scope": "PrivatePalGfx9Key",
      "Name": "CustomBatchBinSize",
      "Defaults": {
        "Default": 8388736
      },
      "Type": "uint32",
      "Description": "Controls the custom batch bin size.  Only used when deferredBatchBinMode==1 High word is for x, low word is for y.  Default is 128x128.  Values must be power-of-two between 16 and 512",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "customBatchBinSize",
      "HashName": 207210078
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableBinningPsKill",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, binning is disabled when the PS has a discard instruction or can be trivially rejected.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableBinningPsKill",
      "HashName": 1197165395
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableBinningNoDb",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, binning is disabled if there is no depth buffer bound.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableBinningNoDb",
      "HashName": 2139865571
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableBinningBlendingOff",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "If true, binning is disabled if blending is disabled or blending does not require the destination color to be read.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableBinningBlendingOff",
      "HashName": 3568835784
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningMaxAllocCountLegacy",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Maximum amount of parameter storage per batch when not using NGG. Units are parameter cache lines divided by two. The maximum is value 128. Zero means calculate an optimal value based on the hardware configuration.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningMaxAllocCountLegacy",
      "HashName": 681698893
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningMaxAllocCountNggOnChip",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Maximum amount of parameter storage per batch when using NGG with the on-chip parameter cache. Units are parameter cache lines divided by two. Zero means calculate an optimal value based on the hardware configuration.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningMaxAllocCountNggOnChip",
      "HashName": 2543003509
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningMaxPrimPerBatch",
      "Defaults": {
        "Default": 1024
      },
      "Type": "uint32",
      "Description": "Maximum number of primitives per batch. The maximum value is 1024.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningMaxPrimPerBatch",
      "HashName": 1317079767
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningContextStatesPerBin",
      "Defaults": {
        "Default": 1
      },
      "Type": "uint32",
      "Description": "Maximum number of context rolls before breaking a batch. The maximum value is 6.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningContextStatesPerBin",
      "HashName": 1661639333
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningPersistentStatesPerBin",
      "Defaults": {
        "Default": 1
      },
      "Type": "uint32",
      "Description": "Maximum number of persistent states per batch. The maximum value is 31.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningPersistentStatesPerBin",
      "HashName": 850748547
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningFpovsPerBatch",
      "Defaults": {
        "Default": 63
      },
      "Type": "uint32",
      "Description": "Maximum number of FPOV tokens allowed per batch. Zero means no limit.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningFpovsPerBatch",
      "HashName": 2093710317
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningOptimalBinSelection",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Value for the PA_SC_BINNER_CNTL_1::OPTIMAL_BIN_SELECTION register field.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "binningOptimalBinSelection",
      "HashName": 456360427
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "BinningDisableBinningAppendConsume",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, disable Binning when the PS uses UAV append or consume",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableBinningAppendConsume",
      "HashName": 380189375
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableDfsm",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, DFSM is disabled.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableDfsm",
      "HashName": 2943779401
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "DisableDfsmPsUav",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "If true, DFSM is disabled when the pixel shader uses UAVs or ROVs.",
      "Tags": [
        "PBB and DFSM",
        "Gfx9"
      ],
      "VariableName": "disableDfsmPsUav",
      "HashName": 1592843420
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "ShaderPrefetchMethod",
      "Defaults": {
        "Default": "PrefetchCpDma"
      },
      "Type": "enum",
      "Description": "Select method of shader prefetching:  0: CP DMA (primes UTCL2 and TCC) 1: PRIME_UTCL2 (primes the UTCL2) ",
      "Tags": [
        "Prefetching (L2 Cache Warming)"
      ],
      "VariableName": "shaderPrefetchMethod",
      "ValidValues": {
        "Name": "PrefetchMethod",
        "Values": [
          {
            "Name": "PrefetchCpDma",
            "Value": 0,
            "Description": "CP DMA prefetching."
          },
          {
            "Name": "PrefetchPrimeUtcL2",
            "Value": 1,
            "Description": "PRIME_UTCL2 (primes the UTCL2)."
          }
        ]
      },
      "HashName": 3028994822
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "PrefetchCommandBuffers",
      "Defaults": {
        "Default": "Gfx9PrefetchCommandsBuildInfo"
      },
      "Type": "enum",
      "Description": "Controls whether CP command buffers are prefetched into the Gfx L2.",
      "Tags": [
        "Prefetching (L2 Cache Warming)",
        "Gfx9"
      ],
      "VariableName": "prefetchCommandBuffers",
      "ValidValues": {
        "Name": "Gfx9PrefetchCommands",
        "Values": [
          {
            "Name": "Gfx9PrefetchCommandsDisabled",
            "Value": 0
          },
          {
            "Name": "Gfx9PrefetchCommandsBuildInfo",
            "Value": 1
          },
          {
            "Name": "Gfx9PrefetchCommandsForceAllDe",
            "Value": 2
          },
          {
            "Name": "Gfx9PrefetchCommandsForceAllDeAce",
            "Value": 3
          }
        ],
        "IsEnum": true
      },
      "HashName": 3867574326
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "AnisoFilterOptEnabled",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Controls whether anisotropic filtering optimizations are enabled.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "anisoFilterOptEnabled",
      "HashName": 958470227
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "CeilingLogicEnabled",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Description": "Controls whether the round-up logic for samplers is enabled.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerCeilingLogicEnabled",
      "HashName": 2986992899
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "PrecisionFixEnabled",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Description": "Controls whether rounding of values coming out of the normalizer is enabled.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerPrecisionFixEnabled",
      "HashName": 286847775
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "SamplerPerfMip",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the value of the PERF_MIP field in Sampler SRD's.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerPerfMip",
      "HashName": 3696903510
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "SamplerAnisoThreshold",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the value of the anisotropy threshold for Sampler SRD's.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerAnisoThreshold",
      "HashName": 1521283108
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "SamplerAnisoBias",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the value of the anisotropy bias for Sampler SRD's.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerAnisoBias",
      "HashName": 4085812096
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "SamplerSecAnisoBias",
      "Defaults": {
        "Default": 0
      },
      "Type": "uint32",
      "Description": "Controls the value of the secondary anisotropy bias for Sampler SRD's.",
      "Tags": [
        "Texture Filtering",
        "Gfx9"
      ],
      "VariableName": "samplerSecAnisoBias",
      "HashName": 2654965201
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaRestrictMetaDataUseInMipTail",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If the workaround is enabled, then only those mips up to and including the first mip in the mip tail will be compressed.",
      "VariableName": "waRestrictMetaDataUseInMipTail",
      "HashName": 599120928
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaWrite1xAASampleLocationsToZero",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls whether the workaround waWrite1xAASampleLocationsToZero is active. FALSE:   Forces the workaround off. TRUE:    Forces the workaround on. Not Set: Allows the driver to decide, based on Chip ID.",
      "VariableName": "waWrite1xAASampleLocationsToZero",
      "HashName": 2042380720
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaColorCacheControllerInvalidEviction",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "The overwrite combiner marks something as overwritten even if there are ensuingquads to the same sector that need dest",
      "VariableName": "waColorCacheControllerInvalidEviction",
      "HashName": 2330368444
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaOverwriteCombinerTargetMaskOnly",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "The overwrite combiner takes only the target mask into consideration while decidingto overwrite combine whereas the other parts of the CB decide on shader mask andtarget mask. This discrepancy may lead to the overwrite combiner incorrectly signalinga read optimization when shader and target mask are different",
      "VariableName": "waOverwriteCombinerTargetMaskOnly",
      "HashName": 1670732044
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaDisableHtilePrefetch",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls if hTile prefetch is disbled.",
      "VariableName": "waDisableHtilePrefetch",
      "HashName": 4011209522
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaMiscPopsMissedOverlap",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls if STALLED_POPS is used or not.",
      "VariableName": "waMiscPopsMissedOverlap",
      "HashName": 2170713611
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaMiscScissorRegisterChange",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls if whenever a context roll is detected whether the scissor registers will be rewritten.",
      "VariableName": "waMiscScissorRegisterChange",
      "HashName": 3580876344
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaMiscPsFlushScissorChange",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls if a PS_PARTIAL_FLUSH is used whenever the scissor top-left or bottom-right registers change.",
      "VariableName": "waMiscPsFlushScissorChange",
      "HashName": 2611268564
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaHtilePipeBankXorMustBeZero",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If set, hTile buffers support non-zero pipe-bank xor values.",
      "VariableName": "waHtilePipeBankXorMustBeZero",
      "HashName": 264312760
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaDisableDfsmWithEqaa",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If set, DFSM will be disabled when EQAA surfaces are bound to the DB",
      "VariableName": "waDisableDfsmWithEqaa",
      "HashName": 3435751213
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaDisable24BitHWFormatForTCCompatibleDepth",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If set PAL will not set 24_8 hw format for 24-32bit converted depth surfaces, this will fix fast clear expansion with TC compatible surfaces (but also return incorrect unclamped border color.)",
      "VariableName": "waDisable24BitHWFormatForTCCompatibleDepth",
      "HashName": 1925370123
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaDummyZpassDoneBeforeTs",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "On Gfx9, the DB can delay tile write requests in such a way that its pending write ack counters can underflow while processing EOP timestamps. The workaround is to issue a ZPASS_DONE event before each timestamp event because it will add pending writes which are lower priority than the tile writes so they will fence the delayed writes. Defaults to TRUE for Gfx9, FALSE for others.",
      "VariableName": "waDummyZpassDoneBeforeTs",
      "HashName": 814916412
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaMetaAliasingFixEnabled",
      "Defaults": {
        "Default": true
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "On Gfx9, the meta-addressing equation can theoretically map multiple pixels to the same This fix prevents that from happening.  Meta-equation generated by driver must match the meta equation as generated by the silicon.  Products that do not have the fix have no HW configurations that expose the problem.",
      "VariableName": "waMetaAliasingFixEnabled",
      "HashName": 3182155668
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaForce256bCbFetch",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If set PAL sets CB_COLOR_ATTRIB.LIMIT_COLOR_FETCH_TO_256B_MAX = 1 for mip levels in the tail that aren't the largest.",
      "VariableName": "waForce256bCbFetch",
      "HashName": 2944333716
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaCmaskImageSyncs",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "If set, align image allocation size up to fragment size when Cmask is present, but continue to issue GCN ranged syncs operations using the original, unpadded size.",
      "VariableName": "waCmaskImageSyncs",
      "HashName": 3002384369
    },
    {
      "Scope": "PrivatePalGfx9Key",
      "Name": "WaDepthStencilTargetMetadataNeedsTccFlush",
      "Defaults": {
        "Default": false
      },
      "Type": "bool",
      "Flags": {
        "RereadSetting": true
      },
      "Tags": [
        "Hardware Workarounds"
      ],
      "Description": "Controls whether to F/I TCC when working with depth/stencil targets that use HTile. This is required on Gfx9 by shader reads if the target is MSAA, has stencil, or has metadata in the mip tail region.",
      "VariableName": "waDepthStencilTargetMetadataNeedsTccFlush",
      "HashName": 3167089535
    }
  ],
  "Tags": [
    "General",
    "Cache flush",
    "Color Targets",
    "Compute Pipelines",
    "Depth/Stencil",
    "Graphics Pipelines",
    "Shader Options",
    "NGG Controls",
    "PBB and DFSM",
    "Prefetching (L2 Cache Warming)",
    "Texture Filtering",
    "Hardware Workarounds",
    "Gfx9"
  ],
  "ComponentName": "Gfx9_Pal",
  "Enums": [
    {
      "Name": "Gfx9NggPipelineType",
      "Values": [
        {
          "Name": "NggPipelineTypeDisabled",
          "Value": 0,
          "Description": "Disabled."
        },
        {
          "Name": "NggPipelineTypeVsPs",
          "Value": 1,
          "Description": "Enabled for all VsPs (VsPs) pipelines."
        },
        {
          "Name": "NggPipelineTypeVsGsPs",
          "Value": 2,
          "Description": "Enabled for all VsGsPs (Gs) pipelines."
        },
        {
          "Name": "NggPipelineTypeVsHsDsPs",
          "Value": 4,
          "Description": "Enabled for all VsHsDsPs (Tess) pipelines."
        },
        {
          "Name": "NggPipelineTypeVsHsDsGsPs",
          "Value": 8,
          "Description": "Enabled for all VsHsDsGsPs (GsTess) pipelines."
        },
        {
          "Name": "NggPipelineTypeAll",
          "Value": 15,
          "Description": "Enabled for all pipeline types."
        }
      ],
      "IsEnum": true
    }
  ]
}